@import config

// CUSTOM USER STYLES & IMPORTS


    //в сасс ОЧЕНЬ ВАЖНО СОБЛЮДЕНИЕ РАЗМЕТКИ ТАКОГО ТИПА
//body СЛЕВА ИДЕТ КЛАСС
//    background-color: #1c1c1c  С ОДНИМ ТАБОМ ВПРАВО ИДУТ ПРИСВАИВАЕМЫ СВОЙСТВА ИНАЧЕ БУДЕТ ОШИБКА 
//    font-weight: 300
//    perspective: 1000px

body                             // задаем общие стили в боди(на всей странице)
    background-color: #1c1c1c // задаем цвет фона
    font-weight: 300            //задаем основной стиль текста который применяется на странице
    perspective: 1000px         //perspective определяет расcтояние между плоскостью z = 0 и
                                //пользователем для того чтобы придать 3D-позиционируемому элементу эффект переспективы. 
                                //Каждый трансформируемый элемент с z > 0 станет больше, с z < 0 соответственно меньше.

.top-line                       //стилим объект top-line в хтмл
    position: absolute          // Указывает, что элемент абсолютно позиционирован, при этом другие элементы отображаются на веб-странице словно абсолютно позиционированного элемента и нет.
    width: 100%                 //width="100%" означает, что рисунок будет растянут на всю ширину веб-страницы
    padding: 60px 0             // Устанавливает значение полей вокруг содержимого элемента. Первое значение устанавливает поля от верхнего и нижнего края, второе — от левого и правого.
    z-index: 100                //Любые позиционированные элементы на веб-странице могут накладываться друг на друга в определенном порядке,
                                // имитируя тем самым третье измерение, перпендикулярное экрану. z-index устанавливает этот порядок и чем он выше тем выше соответственно наслаивается элемент 
    
    // элементы ниже вложены в top-line  поэтому стилим их внутри него (если есть например еще один элемент с классом button но уже не 
    //  внутри эемента top-line то стили указанные ниже к нему не применятся)
    .container-fluid
        max-width: 1680px       //Устанавливает максимальную ширину элемента в 1680px   . 
    .button                     //кнопка "Регистрация"
        +media-breakpoint-up(sm)        // бутстрап медиа запрос (если sm (Small devices (landscape phones, 576px and up)) то выполняем то что ниже )
            margin-right: 50px          // Устанавливает величину отступа от правого края элемента 50 пикселей.
        +media-breakpoint-down(md)      //(tablets, less than 992px) 
            margin-right: 10px          //  отступ от правого края элемента 10 пикселей.
            position: relative          //Положение элемента устанавливается относительно его исходного места.
                                        // Добавление свойств left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
            right: 5px                  //собственно добавление свойства right сдвигает его на 5 пикселей вправо
    +media-breakpoint-down(md)        // в данном случае у устройств шириной ниже(tablets, less than 992px),   
       position: relative           //положение элемента устанавливается относительно его исходного места (тоесть без этого параметра контент бы налез поверх top-line ) и
       padding: 30px 0              // устанавливаеся значение полей вокруг содержимого элемента 30 пикселей слева и справа (чтобы кнопки не липли к краям)


.text-right                 //этот класс добавлен дополнительно в хтмл. найди и посмотри. 
    text-align: right       // единственная задача это выранивание текста по правому краю
.text-center
    text-align: center      //соответственно по центру


.logo                       //настройки логотипа
    font-size: 26px         //размер шрифта
    color: #ffffff          //цвет
    font-weight: bold       //начертание
    padding: 10px           // значение полей вокруг содержимого элемента ЧТОБЫ БЫЛО УДОБНЕЕ НАЖАТЬ НА ЛОГОТИП НЕ ПРИЦЕЛИВАЯСЬ (так удобнее пользователям)
    white-space: nowrap     //устанавливает, как отображать пробелы между словами nowrap - Пробелы не учитываются, переносы строк в коде HTML игнорируются
    span                    //для спана в logo 
        font-weight: 300    //начертание тоньше
        transition: color 1s ease   //Устанавливает эффект перехода (в данном случае цвета в течение 1 секунды 
                                    // ease - Анимация начинается медленно, затем ускоряется и к концу движения опять замедляется)
    &:hover                         // при наведении мыши применяются следующие свойства
        text-decoration: none       // Отменяет все эффекты, в том числе и подчеркивания у ссылок, которое задано по умолчанию.
        color: #ffffff              
        span                       // для span при наведении применяет следующее
            color: $accent         // меняет цвет на акцентный (он задан в файле config который подключен в начале страницы)
    +media-breakpoint-up(md)       // медиа запрос относящийся к logo 
            margin-left: 40px      //отступ от левого края элемента 40 пикселей

.button                             //стилим кнопку Регистрация
    background-color: $accent       //цвет заливки 
    color: #ffffff               // цвет текста
    display: inline-block          //Это значение генерирует блочный элемент, который обтекается другими элементами веб-страницы подобно встроенному элементу. подробнее http://htmlbook.ru/css/display
    padding: 10px 28px             // в данном случае padding выступает как свойство отвечающее за границы заливки по 10 пикселей сверху/снизу и по 28 слева/справа
    border-radius: 10em             //Устанавливает радиус скругления уголков рамки заданной paddingом
    font-size: 16px
    font-weight: 400
    transition: background-color 0.25s ease     //трансформация как в логотипе только время быстрее
    &:hover
        color: #ffffff
        text-decoration: none
        background-color: darken($accent, 10)       // ТОЛЬКО В Sass! изменяем цвет заливки и делаем его темнее с помощью функции darken(цвет, на сколько темнее в процентах)

.card-header                            // это болк включающий все остальные
    height: 100vh                       //высота блока 100vh Эквивалентно 100% высоты окна браузера.
    min-height: 700px                   //Задает минимальную высоту элемента 700px   
    overflow: hidden                    //Свойство overflow управляет отображением содержания блочного элемента, если оно целиком не помещается и выходит за область заданных размеров.
                                        // hidden - Отображается только область внутри элемента, остальное будет скрыто.
    position: relative
    +media-breakpoint-down(sm)
        overflow: visible           //visible - Отображается все содержание элемента, даже за пределами установленной высоты и ширины.
    &::before                   //Псевдоэлемент :before применяется для отображения желаемого контента до содержимого элемента, к которому он добавляется
        content: ''             // пока не знаю зачем но при испльзовании before нужно прописывать
        position: absolute
        top: 0                  // указывает что элемент будет расположен в левом верхнем углу
        left: 0                 // указывает что элемент будет расположен в левом верхнем углу
        height: 100%            //полный размер по высоте
        width: 100%             //полный размер по ширине
        background-image: url(../img/dest/russia.svg)           // само изображение background  (карта России)
        background-repeat: no-repeat            // то что оно (background) отобразится только один раз (если не указывать то как закончится 1е изображение пойдет 2е)
        background-position: center             // изображение (background) выравняется по центру
        opacity: 0.02                           // прозрачность 2%
        transform: scale(1.3)                   //Масштабирует элемент в двумерном пространстве по горизонтали и вертикали или одновременно в двух направлениях(на 130%)
        @media ( max-width: 1366px )            // при экране шириной меньше 1366px
            transform: scale(1)                 // исходный размер
        +media-breakpoint-down(sm)              // при Small devices (landscape phones, less than 768px)
            display: none                       // не отображать


.content                                        //контент (2 колонки слева текст справа карточка)
    height: 100%                                //высота 100%
    padding: 160px 0                            //поля 160 пикселей сверху и снизу (отвечаю тз то чтобы контент не залезал на верхнюю линю где лого и кнопка)
    display: flex                               // отображение divов внутри Если display: block.  div занимает всю ширину строки.
                                                // если display: flex, divы встанут в ряд (тоесть текст и каточка будут в одном ряду на друг под другом)
    justify-content: center                     //Выравнивание элементов по центру
    align-items: center                         //выравнивает flex-элементы текущей flex-линии таким же образом, как и justify-content, но в перпендикулярном направлении (по вертикали).
    transform-style: preserve-3d                //Показывает, что дочерний элемент должен быть спозиционирован в 3D-пространстве.
    +media-breakpoint-down(lg)                  // если меньше (desktops, less than 1200px)
        transform-style: flat                   //Показывает, что дочерний элемент лежит в той же плоскости, что и родительский.
        transform: rotate(0)!important          // не вращать !important нужно чтобы применилось
    h1
        font-size: 31px
        line-height: 43px
        margin-bottom: 38px
        strong
            color: $accent
            white-space: nowrap
        span
            font-weight: 300
    h1, p, a
        padding-left: 20px

.trylink
    color: $accent
    font-weight: bold
    margin-top: 20px
    display: inline-block
    font-size: 16px
    +media-breakpoint-down(md)
        margin-top: 10px
        margin-bottom: 30px
    i           // курсив
        display: inline-block
        font-style: normal
        font-weight: 300
        font-size: 24px
        color: #ffffff
        width: 36px
        height: 36px
        background-color: $accent
        text-align: center
        border-radius: 100%         // чтобы сделать кружок но width и height должны быть одинаковыми
        line-height: 32px
        margin-right: 10px
    &:hover
        color: $accent

.card
    position: relative
    width: 458px
    height: 288px
    display: inline-block
    zoom: .8                        //Изменяет масштаб объекта согласно заданному значению.
    >img
        position: absolute      // для всех изображений этот параметр нужен чтобы они друг на друга наложились
        opacity: 0              // полность прозрачные
        transition: all 1s ease //появление
        +media-breakpoint-down(md)
            display: none       // не отображать если (tablets, less than 992px)
    +media-breakpoint-down(md)
        background-image: url(../img/dest/card.png)         //если (tablets, less than 992px) просто вставить туда это изображение
        background-size: cover                              //Масштабирует фоновое изображение согласно заданным размерам.
        width: 100%                                         //   !       
        padding-top: 64.30062630480167%                     //   ! весь этот кусок преобразует изображение при изменении ширины монитора чтобы он никуда не вылезал как узнать padding-top,
        height: auto                                        //   !                ТУТ          https://webdesign-master.ru/services/lazy/
    &-logo_w
        z-index: 12                 //z-index: 12  в нижеидущих элементах нужен чтобы карта россии была на заднем фоне
        top: 45px           // позиционируем по высоте
        right: 45px         // позиционируем по ширине
        width: 120px
    &-chip
        z-index: 12
        left: 45px          // позиционируем по ширине
        top: 80px           // позиционируем по высоте
    &-number-holder
        z-index: 12
        left: 45px          // позиционируем по ширине
        top: 158px          // позиционируем по высоте
        zoom: 3.5
    &-valid
        z-index: 12
        right: 211px        // позиционируем по ширине
        top: 194px          // позиционируем по высоте
        zoom: 3
    &-russia
        z-index: 11
        top: 20px           // позиционируем по высоте
        left: 22px          // позиционируем по ширине
        width: 420px        // ширина карты чтобы аккуратно влезела на кредитку


//l_main это слои кредитки тут мы задаем  z-index для каждой и смещаем их относительно друг друга
.l_main             
    left: 0
    z-index: 10

.l2_main
    left: 0
    z-index: 8
    left: -50px
    top: 30px
    
.l3_main
    left: 0
    z-index: 6
    left: -100px
    top: 60px
// эти классы указаны дополнительно в хтмл на изображениях чтобы разместить их в 3д пространстве (кадный из уровней отстает от основного на -или+ пикселей по оси Z)
.level--2
    transform: translateZ(-70px)

.level--1
    transform: translateZ(-35px)
    
.level-2
    transform: translateZ(50px)

.level-1
    transform: translateZ(35px)
